@{
    ViewBag.Title = "О программе";
}

<div class="page-header">
    <h1>@ViewBag.Title Blockchain Explorer Web</h1>
</div>

<h3>Общее описание</h3>
<p>
    Blockchain Explorer Web это веб-приложение позволяющее выполнять просмотр содержимого хранилища информации на базе технологии блокчейн, а также вносить новые данные в систему.
    Блокчейн — выстроенная по определённым правилам непрерывная последовательная цепочка блоков (связный список), содержащих информацию. 
    Чаще всего копии цепочек блоков хранятся на множестве разных компьютеров независимо друг от друга.
</p>

<h3>Структура проекта</h3>
<p>
    Решение Blockchain включает в себя несколько проектов:
    <ol>
        <li>Blockchain - основная библиотека реализующая логику работы приложения;</li>
        <li>BlockchainData - библиотека реализующее работу хранилищем данных приложения;</li>
        <li>BlockchainExplorerDesktop - Windows Form приложение, позволяющее работать с локальной службой Blockchain;</li>
        <li>BlockchainExplorerDesktop - Windows Form приложение, позволяющее работать с локальной службой Blockchain;</li>
        <li>BlockchainExplorerWeb - веб-приложение, позволяющее работать со службой Blockchain расположеной в сети интернет;</li>
        <li>BlockchainService - WCF-служба для работы с системой Blockchain;</li>
        <li>BlockchainTests - модульные тесты к решению blockchain.</li>
    </ol>
</p>

<h3>Описание проекта</h3>
<p>
    Данный проект реализует основную логику работы приложения.
    Для реализации цепочки блоков используется класс Chain, который позволяет выполнять хеширование данных с помощью одного из алгоритмов хеширования. 
    На данный момент в системе используется алгоритм SHA256, но предусмотрена возможность быстрого добавления других алгоритмов.
    Для хранения информации используется MS SQL сервер, но также как и с алгоритмами хеширования, предусмотрена возможность быстрой замены хранилища данных.
    Цепочка хранит в себе набор связанных блоков. Особенностью данной реализации цепочки является то, что она хранит в себе всю необходимую системную информацию,
    такую как информацию о серверах используемых в сети, и информацию о пользователях системы. Доступ к специализированным системным записям предоставлен 
    через специальные списки, для удобного и быстрого доступа.
    Система способна как создавать новую цепочку блоков, при отсутствии внешних источников подключения, так и получать существующую цепочку из глобальной сети.
    При первом включении система постарается подключится к глобальной сети блокчейн и синхронизировать данные с ней. В дальнейшем данные будут добавляться 
    как в локальное хранилище сети, так и рассылаться по всей глобальной сети.
    Добавление данных выполняется в единую цепочку блоков с указанием типа блока. Предусмотрена возможность быстрого расширения количества типов блоков.
    Взаимодействие между службами осуществляется через запросы к API службы.
</p>
<p>
    Блок данных включает в себя следующую информацию: Версия протокола блока (пока всегда равно единице), Дату создания блока, Хеш блока, Хеш предыдущего блока,
    Информационные данные хранимые в блоке и информацию о пользователе создавшем блок. Данные представляют собой сериализованную в формате json информацию,
    добавленную пользователем в текстовом формате, либо данные о сервере блокчейн, либо сведения о пользователе. Тип блока задается с помощью специального свойства.
    Предоставляется удобный интерфейс сериализации и десериализации данных. Значимыми данными являются информация и ее тип.
    Пользователь содержит в себе логин и зашифрованный пароль пользователя, а также его права доступа. Данные о пользователе также хранятся с сериализованном виде.
</p>
<p>
    Данные хранятся при помощи MS SQL сервера. Для взаимодействия с базой данных используется ORM фреймворк EntityFramework 6. Используется подход Code First, что 
    позволяет автоматически создавать необходимое локальное хранилище данных localdb. При также возможно использование полноценного сервера. 
    Настройка производится в файле app.config. Интересной особенностью данного решения является доработка функционала ef, благодаря которой с помощью специального 
    атрибута можно задать формат возвращаемой даты и времени (utc или местное). 
    Имеется возможность получения всех блоков, добавление нового блока, или очистка всего хранилища. Для хранения данных используется кодировка UTF8.
</p>
<p>
    Desktop explorer подключается к локальной службе блокчейн с помощью сервиса и предоставляет возможность получения всех блоков, 
    просмотра содержимого конкретного блока, а также добавление новых данных в блокчейн. Взаимодействие с сервисом выполняется асинхронно, что 
    позволяет форме не зависать во время обработки информации. Web explorer предоставляет аналогичные возможности, но взаимодействует с глобальной службой
    через специально разработанные api интерфейс. Взаимодействие осуществляется с помощью get запросов. 
</p>
<p>
    Служба предоставляет пять методов для взаимодействия:
    <ol>
        <li>AddHost - запрос на добавление сервера службы блокчейн;</li>
        <li>AddUser - запрос на добавление пользователя;</li>
        <li>AddData - запрос на добавление данных;</li>
        <li>Login - запрос на авторизацию;</li>
        <li>GetChain - получение всех блоков.</li>
    </ol>
    Все запросы работаю асинхронно. Внутри службы существует единственный экземпляр цепочки блоков, предоставляющий потокобезопасный доступ. Как уже упоминалось ранее
    предоставляются два интерфейса доступа, как к службе, так и с помощью web api. Глобальная служба размещена в Azure.
</p>
<h3>Доступ к глобальной службе</h3>
<p>
    <ul>
        <li><a href="http://blockchain-dev-as.azurewebsites.net/" target="_blank">http://blockchain-dev-as.azurewebsites.net/</a> - основной адрес;</li>
        <li><a href="http://blockchain-dev-as.azurewebsites.net/BlockchainService.svc/api/GetChain/" target="_blank">http://blockchain-dev-as.azurewebsites.net/BlockchainService.svc/api/GetChain/</a> - получение всех блоков;</li>
        <li><a href="http://blockchain-dev-as.azurewebsites.net/BlockchainService.svc/api/AddData/Какие-то очень важные данные" target="_blank">http://blockchain-dev-as.azurewebsites.net/BlockchainService.svc/api/AddData/{text}</a> - добавление данных.</li>
        <!-- Не протестировано. Необходимо исправить в будущем.  <li><a href="http://blockchain-dev-as.azurewebsites.net/BlockchainService.svc/api/AddHost/192.168.1.1" target="_blank">http://blockchain-dev-as.azurewebsites.net/BlockchainService.svc/api/AddHost/{ip}</a> - добавление хоста;</li>
        <li><a href="http://blockchain-dev-as.azurewebsites.net/BlockchainService.svc/api/AddUser/@Guid.NewGuid()&qwerty&3" target="_blank">http://blockchain-dev-as.azurewebsites.net/BlockchainService.svc/api/AddUser/{login}&{password}&{role}</a> - добавление пользователя;</li>
        <li><a href="http://blockchain-dev-as.azurewebsites.net/BlockchainService.svc/api/Login/admin&admin" target="_blank">http://blockchain-dev-as.azurewebsites.net/BlockchainService.svc/api/Login/{login}&{password}</a> - авторизация пользователя.</li>-->
    </ul>

    <a href="http://blockchainexplorerweb20180131065911.azurewebsites.net" target="_blank">http://blockchainexplorerweb20180131065911.azurewebsites.net</a> - обозреватель блоков онлайн. <br />
    

    Исходный код доступен в репозитории github <a href="https://github.com/shwanoff/Blockchain" target="_blank">https://github.com/shwanoff/Blockchain</a>
</p>